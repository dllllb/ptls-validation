conf_path: test_conf/train-valid-1iter.yaml
environment: 
  work_dir: test_conf/train-valid-1iter.work
report_file: test_conf/train-valid-1iter.txt
target: 
  file_name: ${hydra:runtime.cwd}/test_data/target.csv
  cols_id: 
    - id
  cols_id_type: 
    - int
  col_target: y
split: 
  fit_ids: false
  train_id: 
    file_name: ${hydra:runtime.cwd}/test_data/id_train.csv
  valid_id: 
    file_name: ${hydra:runtime.cwd}/test_data/id_test.csv
  n_iteration: 1
features: 
  01_baseline: 
    enabled: true
    read_params: 
      file_name: ${hydra:runtime.cwd}/test_data/features_0.csv
      rename_cols: 
        uid: id
    target_options: {}
  01_baseline_50: 
    enabled: true
    read_params: 
      file_name: ${hydra:runtime.cwd}/test_data/features_0.csv
      rename_cols: 
        uid: id
    target_options: 
      labeled_amount: 0.1
  02_embeddings: 
    enabled: true
    read_params: 
      file_name: ${hydra:runtime.cwd}/test_data/features_1.csv
    target_options: {}
  03_both: 
    enabled: true
    read_params: 
      - 
        file_name: ${hydra:runtime.cwd}/test_data/features_0.csv
        rename_cols: 
          uid: id
      - 
        file_name: ${hydra:runtime.cwd}/test_data/features_1.csv
    target_options: {}
external_scores: {}
models: 
  linear: 
    enabled: true
    model:
      _target_: sklearn.linear_model.LogisticRegression
      C: 0.1
    cpu_count: 1
    preprocessing: []
  linear2: 
    enabled: true
    model:
      _target_: sklearn.linear_model.LogisticRegression
      C: 1.0
    cpu_count: 1
    preprocessing: []
  lgbm: 
    enabled: true
    model:
      _target_: lightgbm.LGBMClassifier
      n_jobs: 6
    cpu_count: 6
    preprocessing: []
metrics: 
  auroc: 
    enabled: true
    score_func: sklearn.metrics.roc_auc_score
    scorer_params: 
      needs_proba: true
report: 
  is_check_train: true
  error_handling: fail
  print_all_metrics: true
  metrics: 
    auroc: 
      float_format: "{:.3f}"
      keep_columns: 
        - mean
        - t_pm
        - values
    cnt_features: 
      float_format: "{:.0f}"
      keep_columns: 
        - mean
    cnt_samples: 
      float_format: "{:9,.0f}"
      keep_columns: 
        - mean
    feature_load_time: 
      float_format: "{:,.1f}"
    train_fit_transform_time: 
      float_format: "{:,.1f}"
    feature_transform_time: 
      float_format: "{:,.1f}"
    train_time: 
      float_format: "{:,.1f}"
    auroc_score_time: 
      float_format: "{:,.1f}"
    feature_fit_info: 
      keep_columns: 
        - first
